# generate a github action to build ubuntu docker image
# and push to etma/basedevcontainer
name: Ubuntu
on:
  push:
    paths:
      - .github/workflows/ubuntu.yaml
      - containers/ubuntu.Dockerfile
      - .dockerignore
      - containers/shell/**
  pull_request:
    paths:
      - .github/workflows/ubuntu.yaml
      - containers/ubuntu.Dockerfile
      - .dockerignore
      - containers/shell/**

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to dockerhub to avoid rate limits
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Ubuntu
        run: docker build -t etma/devcontainer-kube:ubuntu -f ./containers/ubuntu.Dockerfile .

  publish:
    runs-on: ubuntu-latest
    needs: verify
    if: github.event_name == 'push'
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v2

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to dockerhub to avoid rate limits
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/setup-qemu-action@v2

      - run: docker context create builders

      - uses: docker/setup-buildx-action@v2
        with:
          version: latest
          endpoint: builders

      - name: set variables
        id: vars
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}
          TAG=${GITHUB_REF#refs/tags/}
          echo ::set-output name=commit::$(git rev-parse --short HEAD)
          echo ::set-output name=created::$(date -u +%Y-%m-%dT%H:%M:%SZ)
          if [ "$TAG" != "$GITHUB_REF" ]; then
            echo ::set-output name=version::$TAG
            echo ::set-output name=ubuntu_version::ubuntu-$TAG
            echo ::set-output name=platforms::linux/amd64,linux/arm64
            echo ::set-output name=main::true
          elif [ "$BRANCH" = "main" ]; then
            echo ::set-output name=version::ubuntu-latest
            echo ::set-output name=ubuntu_version::ubuntu
            echo ::set-output name=platforms::linux/amd64,linux/arm64
            echo ::set-output name=main::true
          else
            echo ::set-output name=version::$BRANCH
            echo ::set-output name=ubuntu_version::$BRANCH-ubuntu
            echo ::set-output name=platforms::linux/amd64,linux/arm64
            echo ::set-output name=main::false
          fi

      - name: Build and push final image
        uses: docker/build-push-action@v3
        if: ${{ steps.vars.outputs.main }}
        with:
          context: .
          file: ./containers/ubuntu.Dockerfile
          platforms: ${{ steps.vars.outputs.platforms }}
          push: true
          build-args: |
            CREATED=${{ steps.vars.outputs.created }}
            REVISION=${{ steps.vars.outputs.commit }}
            VERSION=${{ steps.vars.outputs.version }}
          tags: |
            etma/devcontainer-kube
            etma/devcontainer-kube:${{ steps.vars.outputs.version }}
            etma/devcontainer-kube:${{ steps.vars.outputs.ubuntu_version }}
